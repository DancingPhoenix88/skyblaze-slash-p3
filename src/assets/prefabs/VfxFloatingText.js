
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.4 (Phaser v2.6.2)


/**
 * VfxFloatingText.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function VfxFloatingText(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
    
    Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
    var _text = this.game.add.text(0.0, 0.0, '+10', {"font":"bold 36px DIN Alternate","fill":"#ffffff"}, this);
    _text.name = 'text';
    _text.anchor.set(0.5, 1.0);
    
    
    
    // fields
    
    this.fText = _text;
    
}

/** @type Phaser.Group */
var VfxFloatingText_proto = Object.create(Phaser.Group.prototype);
VfxFloatingText.prototype = VfxFloatingText_proto;
VfxFloatingText.prototype.constructor = VfxFloatingText;

/* --- end generated code --- */
// -- user code here --
//---------------------------------------------------------------------------------------------------------------
VfxFloatingText.prototype.init = function (pool) {
    this._originalPos = this.fText.position.clone();
    this._pool = pool;
    
    this._durationAnim = 1 * Phaser.Timer.SECOND;
};
//---------------------------------------------------------------------------------------------------------------
VfxFloatingText.prototype.setText = function (text, color) {
    if (color == undefined) color = 'white';
    this.fText.text = text;
    this.fText.fill = color;
    return this;
};
//---------------------------------------------------------------------------------------------------------------
VfxFloatingText.prototype._prepareForAnimation = function (obj, pos) {
    // Cancel running (OLD) tweens
    if (this.game.tweens.isTweening( this.fText )) {
        this.game.tweens.removeAll( this.fText );
    }
    
    this.position.copyFrom( pos ); 
    this.z = obj.z - 2;
    
    this.fText.position.set( 0 );
    this.fText.alpha = 1;
};
//---------------------------------------------------------------------------------------------------------------
VfxFloatingText.prototype.animateFor = function (obj, pos, delay) {
    delay |= 0;
    this._prepareForAnimation( obj, pos );
    if (delay <= 0) {
        this._doAnimate();
    } else {
        this.visible = false;
        this.game.time.events.add( delay, this._doAnimate, this );
    }
};
//---------------------------------------------------------------------------------------------------------------
VfxFloatingText.prototype._doAnimate = function () {
    this.visible = true;
    this.game.add.tween( this.fText )
        .to( {y:-50}, this._durationAnim, Phaser.Easing.Cubic.Out, true)
        .onComplete.add( this._onCompleteVfx, this );
    this.game.add.tween( this.fText )
        .delay(400)
        .to( {alpha:0}, this._durationAnim - 400)
        .start();
};
//---------------------------------------------------------------------------------------------------------------
VfxFloatingText.prototype._onCompleteVfx = function () {
    this._pool.returnToFloatingTextVFXPool( this );
};
//---------------------------------------------------------------------------------------------------------------
Phaser.GameObjectFactory.prototype.vfxFloatingText = function (parent, name) {
    // I need to add this to a parent manually (not sure why it didn't work with Group constructor)
    return parent.add(
        new VfxFloatingText( game, parent, name, true ) // Copy & edit from: Phaser.Group
        , true
    );
};